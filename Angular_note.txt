Data Binding - data binding communicate with component class and view templete, vice-versa.
One way data binding - data can be access component to view or view to component vice-versa,
Two Way data binding - is bind data component class to view template or view template to component class, it is conbination property binding and event binding.
String Interpolation -show data in template view using double curly bracket {{}}.
Property Binding - Using property Binding we can change DOM object like - button enable or disable , show a paragrape or hide paragrape.
Few html attribute binding are different like - aria-hidden we should use like this [attr.aria-hidden]="true/false"
Event-Binding - this time data control from view templete to class component like - (input),(onchange) etc.
Tow way binding - is combination of property binding and event binding.
Derective - we use directive for manupulate DOM, 
---component directive - it is simple angular component of Templete.
---attribute directive - it use to change apperence or behavier of a DOM Element. ex. ngStyle, ngClass.
---structural directive - it is use for add or remove a DOM Element of a webpage. ex - ngIf, ngFor, ngSwitch, etc
Custome property Create and binding - @Input() -- Data pass parent to child component.
Custome property/event Create and binding - @Output() -- Data pass child component to parent component , with eventemiter;
Data pass when conponent are not child-parent - first send data child to parent using @Output and  then send to child component using @@Input decorator.
Reference variable - we use reference variable like - #inputSearch in input fields.
ViewChild() - get reference from DOM Element , it take first element match reference. it return a single element.
ViewChildren() - also get reference from DOM Element, it return a LIST from dom element.

















I am an ideal candidate for the .NET developer position due to my extensive experience with the .NET framework, proficiency in C#, and expertise in web development with ASP.NET, MVC, and .NET Core. Additionally, my excellent communication skills and teamwork abilities enable effective collaboration with cross-functional team.